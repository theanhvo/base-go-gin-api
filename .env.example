# ===========================================
# CODEBASE GOLANG - ENVIRONMENT VARIABLES
# ===========================================
# Copy this file to .env and update values for your environment

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=your_secure_password_here
DB_NAME=codebase_db

# Connection pool settings (optional)
DB_MAX_OPEN_CONNS=25
DB_MAX_IDLE_CONNS=5
DB_CONN_MAX_LIFETIME=5m
DEBUG_LOG_QUERY=true

# ===========================================
# REDIS CONFIGURATION
# ===========================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Redis connection settings (optional)
REDIS_POOL_SIZE=10
REDIS_MIN_IDLE_CONNS=5

# ===========================================
# SERVER CONFIGURATION
# ===========================================
SERVER_PORT=8080
SERVER_HOST=0.0.0.0

# Environment: development, staging, production
ENVIRONMENT=development

# ===========================================
# SECURITY CONFIGURATION
# ===========================================
# JWT Secret key (generate a strong random key)
JWT_SECRET=your-super-secret-jwt-key-minimum-32-characters-long

# API Rate limiting (requests per minute)
RATE_LIMIT=1000

# ===========================================
# LOGGING CONFIGURATION
# ===========================================
# Log level: debug, info, warn, error, fatal, panic
LOG_LEVEL=info

# Log format: json, text
LOG_FORMAT=json

# Enable request logging: true, false
ENABLE_REQUEST_LOGGING=true

# ===========================================
# CACHE CONFIGURATION
# ===========================================
# Cache TTL in minutes
CACHE_TTL=60

# Enable caching: true, false
ENABLE_CACHE=true

# ===========================================
# CORS CONFIGURATION
# ===========================================
# Allowed origins (comma separated)
CORS_ALLOWED_ORIGINS=*

# Allowed headers (comma separated)
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With

# Allowed methods (comma separated)
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS

# ===========================================
# EXTERNAL SERVICES (Optional)
# ===========================================
# Email service
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# File storage
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-access-key
AWS_SECRET_ACCESS_KEY=your-secret-key
S3_BUCKET_NAME=your-bucket-name

# ===========================================
# MONITORING & OBSERVABILITY (Optional)
# ===========================================
# Prometheus metrics endpoint
ENABLE_METRICS=true
METRICS_PATH=/metrics

# Health check settings
HEALTH_CHECK_TIMEOUT=5s

# ===========================================
# PRODUCTION SETTINGS
# ===========================================
# Enable Gin release mode in production: true, false
GIN_MODE=debug

# Enable HTTPS: true, false (requires SSL certificates)
ENABLE_HTTPS=false
SSL_CERT_PATH=/path/to/cert.pem
SSL_KEY_PATH=/path/to/key.pem

# ===========================================
# DOCKER SPECIFIC (when running in containers)
# ===========================================
# Use these when running with Docker Compose
# DB_HOST=postgres
# REDIS_HOST=redis

# ===========================================
# SENTRY CONFIGURATION
# ===========================================
# Sentry DSN for error tracking and performance monitoring
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Application metadata for Sentry
APP_VERSION=v1.0.0
ENVIRONMENT=development

# Sentry options (optional)
SENTRY_SAMPLE_RATE=1.0
SENTRY_TRACES_SAMPLE_RATE=0.1

RABBITMQ_URL=amqp://guest:guest@localhost:5672/
RABBITMQ_EXCHANGE=api_exchange
GRPC_PORT=9090